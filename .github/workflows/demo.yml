name: Deploy website

on:
  push:
    branches:
      - main
      - dev
      - staging
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Get code
        uses: actions/checkout@v4
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          
      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Test code
        run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}  

      - name: Install dependencies
        run: npm ci

      - name: Build website
        run: npm run build

      - name: Publish JS filename
        id: publish
        run: |
          echo "script-file=$(find dist/assets/*.js -type f -exec basename {} \;)" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with: 
          name: dist-files
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: >
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files

      - name: Output contents
        run: ls

      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"

      - name: Deploy
        run: echo "Deploying to bandia 2.0"
